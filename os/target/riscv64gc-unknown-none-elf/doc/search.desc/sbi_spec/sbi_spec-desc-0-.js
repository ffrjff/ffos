searchState.loadedDescShard("sbi_spec", 0, "RISC-V SBI Specification structure and constant definitions\nChapter 4. Base Extension (EID #0x10)\nCapture 3. Binary Encoding\nChapter 9. Hart State Management Extension (EID #0x48534D …\nChapter 5. Legacy Extensions (EIDs #0x00 - #0x0F)\nChapter 11. Performance Monitoring Unit Extension (EID …\nChapter 8. RFENCE Extension (EID #0x52464E43 “RFNC”)\nChapter 7. IPI Extension (EID #0x735049 “sPI: s-mode IPI…\nChapter 10. System Reset Extension (EID #0x53525354 “SRST…\nChapter 6. Timer Extension (EID #0x54494D45 “TIME”)\nExtension ID for RISC-V SBI Base extension\nFunction ID to get value of <code>marchid</code> register in current …\nFunction ID to get value of <code>mimpid</code> register in current …\nFunction ID to get value of <code>mvendorid</code> register in current …\nFunction ID to get the current SBI implementation ID\nFunction ID to get the current SBI implementation version\nFunction ID to get the current SBI specification version\nFunction ID to probe information about one SBI extension …\nDefault probe value for the target SBI extension is …\nSBI specification version\nReturns the argument unchanged.\nConverts raw extension value into Version structure\nSBI Implementation IDs\nCalls <code>U::from(self)</code>.\nReads major version of specification\nReads minor version of specification\nBerkley Bootloader\nCoffer\nDiosix\nKVM\nOpenSBI\nRustSBI\nXvisor\nError for resource already available\nError for resource already started\nError for resource already stopped\nCustom error code\nError for denied (unused in standard extensions)\nRISC-V SBI error in enumeration\nError for SBI call failed for unknown reasons\nError for invalid address\nError for invalid parameter\nError for target operation not supported\nError for resource already available\nError for resource already started\nError for resource already stopped\nError for denied (unused in standard extensions)\nError for SBI call failed for unknown reasons\nError for invalid address\nError for invalid parameter\nError for target operation not supported\nSBI success state return value\nSBI functions return type\nSBI call failed for the target resource is already …\nSBI call failed for the target resource is already started,\nSBI call failed for the target resource is already stopped,\nReturns <code>res</code> if self is success value, otherwise otherwise …\nCalls <code>op</code> if self is success value, otherwise returns the …\nConverts from <code>SbiRet</code> to <code>Option&lt;Error&gt;</code>.\nError number\nReturns the contained success value, consuming the <code>self</code> …\nReturns the contained error as <code>Error</code> struct, consuming the …\nThe SBI call request failed for unknown reasons.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts to a <code>Result</code> of value and error.\nSBI call failed for invalid mask start address, not a …\nSBI call failed due to invalid hart mask parameter, …\nReturns <code>true</code> if current SBI return is an error.\nReturns <code>true</code> if current SBI return succeeded.\nMaps a <code>SbiRet</code> to <code>Result&lt;U, E&gt;</code> by applying a function to a …\nMaps a <code>SbiRet</code> to <code>Result&lt;T, F&gt;</code> by applying a function to a …\nReturns the provided default (if error), or applies a …\nMaps a <code>SbiRet</code> to <code>usize</code> value by applying fallback function …\nSBI call failed due to not supported by target ISA, …\nConverts from <code>SbiRet</code> to <code>Option&lt;usize&gt;</code>.\nReturns <code>res</code> if self is SBI error, otherwise returns the …\nCalls <code>op</code> if self is SBI error, otherwise returns the …\nReturns success SBI state with given <code>value</code>.\nReturns the contained success value, consuming the <code>self</code> …\nReturns the contained error as <code>Error</code> struct, consuming the …\nReturns the contained success value or a provided default.\nReturns the contained success value or computes it from a …\nResult value\nExtension ID for Hart State Management extension\nFunction ID to get the current status (or HSM state id) of …\nFunction ID to start executing the given hart at specified …\nThe hart is pending before being resumed\nThe hart is physically powered-up and executing normally\nThe hart is pending before being started\nThe hart is not executing in supervisor-mode or any lower …\nThe hart is pending before being stopped\nThe hart is in a platform specific suspend (or low power) …\nThe hart is pending before being suspended\nFunction ID to stop executing the calling hart in …\nFunction ID to put the calling hart into suspend or …\nDefault non-retentive hart suspend type\nDefault retentive hart suspend type\n§5.4\n§5.3\n§5.2\n§5.6\n§5.7\n§5.8\n§5.5\n§5.1\n§5.9\nExtension ID for Performance Monitoring Unit extension\nFunction ID to find and configure a counter from a set of …\nFunction ID to provide the current value of a firmware …\nFunction ID to get details about the specified counter\nFunction ID to start or enable a set of counters on the …\nFunction ID to stop or disable a set of counters on the …\nFunction ID to get the number of counters, both hardware …\nExtension ID for Remote Fence extension\nFunction ID to <code>FENCE.I</code> instruction on remote harts\nFunction ID to <code>HFENCE.GVMA</code> for all virtual machines on …\nFunction ID to virtual machine id based <code>HFENCE.GVMA</code> on …\nFunction ID to <code>HFENCE.VVMA</code> for all address spaces in …\nFunction ID to address space based <code>HFENCE.VVMA</code> for current …\nFunction ID to <code>SFENCE.VMA</code> for all address spaces on remote …\nFunction ID to address space based <code>SFENCE.VMA</code> on remote …\nExtension ID for Inter-processor Interrupt extension\nFunction ID to send an inter-processor interrupt to all …\nExtension ID for System Reset extension\nNo Reason as reset reason\nSystem Failure as reset reason\nCold Reboot as reset type\nShutdown as reset type\nWarm Reboot as reset type\nFunction ID to reset the system based on provided reset …\nExtension ID for Timer extension\nFunction ID to program the clock for next event after an …")