(function() {var type_impls = {
"riscv":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#78-94\">source</a><a href=\"#impl-Address-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"riscv/addr/trait.Address.html\" title=\"trait riscv::addr::Address\">Address</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#79-81\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.Address.html#tymethod.new\" class=\"fn\">new</a>(addr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.as_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#82-84\">source</a><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.Address.html#tymethod.as_usize\" class=\"fn\">as_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a></h4></section><section id=\"method.page_number\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#85-87\">source</a><a href=\"#method.page_number\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.Address.html#tymethod.page_number\" class=\"fn\">page_number</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a></h4></section><section id=\"method.page_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#88-90\">source</a><a href=\"#method.page_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.Address.html#tymethod.page_offset\" class=\"fn\">page_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a></h4></section><section id=\"method.to_4k_aligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#91-93\">source</a><a href=\"#method.to_4k_aligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.Address.html#tymethod.to_4k_aligned\" class=\"fn\">to_4k_aligned</a>(&amp;self) -&gt; Self</h4></section></div></details>","Address","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddressX64-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#112-123\">source</a><a href=\"#impl-AddressX64-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"riscv/addr/trait.AddressX64.html\" title=\"trait riscv::addr::AddressX64\">AddressX64</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#113-119\">source</a><a href=\"#method.new_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.AddressX64.html#tymethod.new_u64\" class=\"fn\">new_u64</a>(addr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.as_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#120-122\">source</a><a href=\"#method.as_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/addr/trait.AddressX64.html#tymethod.as_u64\" class=\"fn\">as_u64</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a></h4></section></div></details>","AddressX64","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-Clone-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-Debug-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FrameAllocatorFor%3CPhysAddrSv48%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/paging/frame_alloc.rs.html#28-33\">source</a><a href=\"#impl-FrameAllocatorFor%3CPhysAddrSv48%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"riscv/paging/trait.FrameAllocator.html\" title=\"trait riscv::paging::FrameAllocator\">FrameAllocator</a>&gt; <a class=\"trait\" href=\"riscv/paging/trait.FrameAllocatorFor.html\" title=\"trait riscv::paging::FrameAllocatorFor\">FrameAllocatorFor</a>&lt;<a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a>&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/paging/frame_alloc.rs.html#30-32\">source</a><a href=\"#method.alloc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/paging/trait.FrameAllocatorFor.html#tymethod.alloc\" class=\"fn\">alloc</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"riscv/addr/type.Frame.html\" title=\"type riscv::addr::Frame\">Frame</a>&gt;</h4></section></summary><div class='docblock'>Allocate a frame of the appropriate size and return it if possible.</div></details></div></details>","FrameAllocatorFor<PhysAddrSv48>","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FrameDeallocatorFor%3CPhysAddrSv48%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/paging/frame_alloc.rs.html#35-40\">source</a><a href=\"#impl-FrameDeallocatorFor%3CPhysAddrSv48%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"riscv/paging/trait.FrameDeallocator.html\" title=\"trait riscv::paging::FrameDeallocator\">FrameDeallocator</a>&gt; <a class=\"trait\" href=\"riscv/paging/trait.FrameDeallocatorFor.html\" title=\"trait riscv::paging::FrameDeallocatorFor\">FrameDeallocatorFor</a>&lt;<a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a>&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dealloc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/paging/frame_alloc.rs.html#37-39\">source</a><a href=\"#method.dealloc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"riscv/paging/trait.FrameDeallocatorFor.html#tymethod.dealloc\" class=\"fn\">dealloc</a>(&amp;mut self, frame: <a class=\"type\" href=\"riscv/addr/type.Frame.html\" title=\"type riscv::addr::Frame\">Frame</a>)</h4></section></summary><div class='docblock'>Deallocate the given frame of memory.</div></details></div></details>","FrameDeallocatorFor<PhysAddrSv48>","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-Ord-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-PartialEq-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","riscv::addr::PhysAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-PartialOrd-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","riscv::addr::PhysAddr"],["<section id=\"impl-Copy-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-Copy-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section>","Copy","riscv::addr::PhysAddr"],["<section id=\"impl-Eq-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-Eq-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section>","Eq","riscv::addr::PhysAddr"],["<section id=\"impl-PhysicalAddress-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#125\">source</a><a href=\"#impl-PhysicalAddress-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"riscv/addr/trait.PhysicalAddress.html\" title=\"trait riscv::addr::PhysicalAddress\">PhysicalAddress</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section>","PhysicalAddress","riscv::addr::PhysAddr"],["<section id=\"impl-StructuralPartialEq-for-PhysAddrSv48\" class=\"impl\"><a class=\"src rightside\" href=\"src/riscv/addr/sv48.rs.html#76\">source</a><a href=\"#impl-StructuralPartialEq-for-PhysAddrSv48\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"riscv/addr/sv48/struct.PhysAddrSv48.html\" title=\"struct riscv::addr::sv48::PhysAddrSv48\">PhysAddrSv48</a></h3></section>","StructuralPartialEq","riscv::addr::PhysAddr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()